#535 Project 2
#2 Bond Portfolio Management


# 2.1. Use the pricing equation of a fixed-coupon bond to price each of the 
# above bonds. I recommend writing a function that takes yield, coupon,
# face value, and maturity as its main arguments.

bond.price <- function(yield, coupon, face.value, maturity) {
  
  V.coupons <- 0
  times <-  seq(2*maturity) # coupon paid every 6 months
 # times = c(0, times) # add initial coupon
  for (i in times) {
  V.coupons <- V.coupons + coupon  / ( (1 + yield)^(i * 0.5) ) # coupon paid every 6 months
  }
  
  V.face.value <- face.value / ((1 + yield)^maturity)
  print( V.face.value )
  print( V.coupons )
  res <- V.coupons + V.face.value
  return (res)
}

yields <- c(0.0288, 0.0307, 0.0323, 0.034, 0.0147, 0.014,0.0156,0.0206)
coupons <- c(2.75,  2.88, 2.88,  3, 1.5, 1.5, 1.63,  2.25)
mats <-  c(2,  5,10, 30, 2, 5, 10,30)

row = 8
computed.prices = bond.price(yield = yields[row],
           coupon = coupons[row], 
           face.value  = 100, 
           maturity = mats[row])
computed.prices

computed.prices = c(105.0974,
                    112.4954,
                    121.7193,
                    149.366,
                    103.0153,
                    107.7249,
                    115.7444,
                    154.7113)
given.prices = c(99.74, 99.11,97, 92.47, 100.06, 100.5, 100.55,104.28)

plot(given.prices, computed.prices)

# 2.2 

gf <- function(yield, coupon, face.value, maturity, P0) {
  res = bond.price(yield, coupon, face.value, maturity) - P0
  return (res)
}

P0s <- c(99.74,99.11, 97,92.47,100.06,100.5, 100.55,104.28)
row = 1
diff = gf(yield = yields[row],
  coupon = coupons[row], 
  face.value  = 100, 
  maturity = mats[row],
  P0 = P0s[row])


# 2.5 No optimization, satisfy budget equation
